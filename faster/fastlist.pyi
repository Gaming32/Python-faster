from __future__ import annotations
from typing import Any, Iterable, Sequence, Union


class fastlist:
    def __init__(self, length: int = 0) -> None: ...
    @staticmethod
    def from_sequence(seq: Sequence[Any]) -> fastlist: ...
    def __getitem__(self, index: Union[int, slice]) -> Any: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterable[Any]: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, index: Union[int, slice], value: Any) -> None: ...
    def resize(self, newlength: int) -> None: ...
